# https://github.com/Rishwi/Quantum-Algorithms-Practice/blob/0ec4089674701b1a7ef8ef34ab92be3c5ac13d8a/QuantumNumberGuessingGame/QuantumNumberGuessingGame.py
# -*- coding: utf-8 -*-
"""QuantumNumberGuessingGame.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o1vjUEcyahPMt6OTJnNBGxprwA2BGcUh
"""

"""
REQUIREMENTS: 
--------------
1. Python
2. Qiskit
--------------
You will get three chances to guess the number.
ENJOY THE GAME!!!
"""
from qiskit import *

def PlayGame():  
  qc=QuantumCircuit(4,4)
  qc.h(0)
  qc.h(1)
  qc.h(2)
  qc.h(3)
  qc.barrier()
  qc.measure(0,0)
  qc.measure(1,1)
  qc.measure(2,2)
  qc.measure(3,3)
  #qc.draw(output='mpl')
  backend = Aer.get_backend('qasm_simulator')
  res = execute(qc, backend=backend, shots= 1024).result()
  counts = res.get_counts()
  from qiskit.visualization import plot_histogram
  #plot_histogram(counts)
  max_key = max(counts, key=counts.get)
  d=int(max_key,2)
  print("Hey User guess the hidden secret number: ")
  n= int(input())
  if d==n:
    print("Congratulations, you won!!!".upper())
    break
  else:
    if 0<2:
      print("No thats a wrong a guess. Please Try Again!\nYou have "+str(2-0)+ " more chances.")
    else:
      print("Game Over You Lose!!!".upper())
      break
  n=int(input())
  if d==n:
    print("Congratulations, you won!!!".upper())
    break
  else:
    if 1<2:
      print("No thats a wrong a guess. Please Try Again!\nYou have "+str(2-1)+ " more chances.")
    else:
      print("Game Over You Lose!!!".upper())
      break
  n=int(input())
  if d==n:
    print("Congratulations, you won!!!".upper())
    break
  else:
    if 2<2:
      print("No thats a wrong a guess. Please Try Again!\nYou have "+str(2-2)+ " more chances.")
    else:
      print("Game Over You Lose!!!".upper())
      break
  n=int(input())


PlayGame()